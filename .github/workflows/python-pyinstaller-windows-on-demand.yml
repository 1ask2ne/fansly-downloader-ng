# This workflow will install Python dependencies and
# build a PyInstaller package for Windows on demand.

name: Python PyInstaller - Windows - On Demand

on:
  workflow_dispatch:

permissions:
  contents: write

env:
  ARCHIVE_NAME: Fansly_Downloader_NG-Windows

jobs:
  build:

    runs-on: windows-latest

    steps:

    - uses: actions/checkout@v3

    - name: Set short commit hash variable
      run: |
        Write-Output "SHORT_SHA=$(${Env:GITHUB_SHA}.Substring(0, 7))" >> "${Env:GITHUB_ENV}"

    - name: Show commit hash variable
      run: |
        Write-Host $Env:SHORT_SHA

    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip

        if (Test-Path requirements.txt -PathType Leaf) { pip install -r requirements.txt }

        if (Test-Path requirements-dev.txt -PathType Leaf) { pip install -r requirements-dev.txt }

    - name: Run PyInstaller
      run: |
        .\build.cmd

    - name: Show PyInstaller warnings
      run: |
        if (Test-Path 'build\Fansly Downloader NG\warn-Fansly Downloader NG.txt' -PathType Leaf)
        {
          Get-Content 'build\Fansly Downloader NG\warn-Fansly Downloader NG.txt'
        }

    - name: Zip EXE
      run: |
        cd dist
        7z a "${Env:ARCHIVE_NAME}-${Env:SHORT_SHA}.zip" "Fansly Downloader NG.exe"

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.ARCHIVE_NAME }}-${{ env.SHORT_SHA }}
        path: |
          dist/${{ env.ARCHIVE_NAME }}-${{ env.SHORT_SHA }}.zip

    - name: Publish release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: true
        title: "Development Release ${{ env.SHORT_SHA }}"
        files: |
          dist/${{ env.ARCHIVE_NAME }}-${{ env.SHORT_SHA }}.zip
